//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: dlz_fight.bt
//   Authors: ltg1831
//   Version: 0.1
//   Purpose: Analyze the file ('fight.dat')
//  Category: Game
// File Mask: 
//  ID Bytes: 
//   History:
//   0.1   2022-4-14 first version
//------------------------------------------------

// 共47
//  0 穿越封锁线,营救朱老忠,攻打赵村,接应李向阳,处决高敬天,
//  5 攻打李村,接应肖飞,攻占土桥,救援白洋淀,保卫白洋淀,
// 10 智救村民,解救林嫂,抢夺粮食,保卫冉庄,地道战,
// 15 打火车,过铁路,夺取武器,智擒郑之光,义收金花婆,
// 20 增援鸡公山,除掉高得远,攻打黑风寨,营救彼德,攻打长湾,
// 25 攻打施南镇,孤胆英雄,施南保卫战,保卫红岩寺,刺杀川岛芳子,
// 30 红岩反击战,夹击桥本,袭击军火库,袭击军营,攻打县城,
// 35 大决战,狼牙山狙击战,平型关大战,台儿庄大战,昆仑关反击战,
// 40 狼牙山狙击战,平型关大战,台儿庄大战,昆仑关反击战,中国象棋,
// 45 龟兔赛跑,鬼子进村,

typedef struct {
    typedef struct {
        char name[0x20];
        uint32 difficulty;    // 难度系数，用于打分，用于保证正常情况下，你的分数在100分
        uint32 fight_txt <read=FightTxtMap>;// 开场对话，好像有问题，地址448720有个映射表，43c49f,是处理函数
        char success[0x40];
        char failure[0x40];
        struct {
            uint32 x;
            uint32 y;
            uint32 appearance; // 一共三个宝箱外观,box.img;wupin-1时，打开状态
            uint32 wupin;      // 加载时，随机三个物品的结果；如果拿取，此值为-1
            uint32 wupin0;     // 50%几率
            uint32 wupin1;     // 30%几率
            uint32 wupin2;     // 20%几率
        } box[4];          // 战斗场景的宝箱，最多四个
        uint32 pad9;       // 7d02e0
        uchar  pad10[0x20];// 7d02e4
        uint32 pad11;      // 7d02f4
        uint32 pad12;      // 7D0304
        uint32 pad13[92];  // 7D030C
        uint32 pad14;      // 7D047C
        uint32 pad15;      // 7D0480
    } Intro <read=ReadIntro>;

    // 战斗人员信息
    typedef struct {
        int  pad0;
        int  tili;
        int  shiqi;
        int  pad3;
        int  yidong;
        int  pad5;
        int  pad6;
        int  pad7;
        int  pos_x;        // 横坐标
        int  pos_y;        // 纵坐标
        int  direction;    // 0：北 1：南 2：西 3：东
        int  target_people;// 跟踪人物
        int  target_posx;  // 跟踪位置x
        int  target_posy;  // 跟踪位置y
        int  pad14;
        char stage;        // 是否登场
        char behavior;     // 具体意义查看行为树代码，还没有定义每个行为值的含义
        char pad15_b2;
        char moveable;     // 是否已行动，1，未，0：完；2：攻击 3：被攻击
    } Fighter <read=ReadFighter>;

    // 人物信息
    typedef struct {
        char   name[0x10];
        uint32 face;    // 头像索引
        uint32 pad2;
        uint32 enemy;   // 0 我方；1 敌方
        uint32 wuli;    // 武力
        uint32 zhili;   // 智力
        uint32 level;   // 人物等级
        uint32 jingyan; // 经验
        uint32 bingzhong;// 兵种
        uint32 gongji;  // 攻击
        uint32 buji;    // 补给
        uint32 jili;    // 激励
        uint32 yiliao;  // 医疗
        uint32 huogong; // 火攻
        uint32 gunmu;   // 滚木
        uint32 leishi;  // 擂石
        uint32 weishe;  // 威慑
        uint32 saorao;  // 骚扰
        uint32 pohuai;  // 破坏
        uint32 lueduo;  // 掠夺
        uint32 fanjian; // 反间
        uint32 yibing;  // 疑兵
        uint32 duzhan;  // 督战
        uint32 ansha;   // 暗杀
        uint32 shidu;   // 施毒
        uint32 kongxi;  // 空袭
    
        byte   wupin[8];// 物品
        byte   dilei[8];// 物品
    } People <read=(name)>;
    Intro intro;
    Fighter f[0x80];
    People people[0x58];
}Fight <read=(intro.name)>;

string FightTxtMap(int input)
{
    int mapping[16]=
    {    0x22,0x23,0x24,0x26,
        0x28,0x29,0x2A,0x2C,
        0x2E,0x31,0x32,0x33,
        0x35,0x2B,0x00,0x63
    };
    string s;
    int i = 0;
    int res = input;
    for(i = 0; i < 16; i++) {
        if(input == mapping[i]) {
            res = i;
            break;
        }
    }
    SPrintf( s, "%d", res);
    return s;
}

string ReadIntro(Intro &i)
{
    string s;
    SPrintf( s, "%s<%s>", i.name, FightTxtMap(i.fight_txt));
    return s;
}

string ReadFighter(Fighter &f)
{
    string s="";
    SPrintf( s, "%d %d %d %d", f.pad0, f.target, f.target_posx, f.target_posy);
    return s;
}

// 一共47个战斗，每个战斗20508个字节
Fight fight[47];